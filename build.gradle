plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.soulware'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
//    AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'
//    JPA
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    REDIS
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    OAUTH2
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    SPRING SECURITY
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    SPRING WEB
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
//    MYSQL
//    runtimeOnly 'com.mysql:mysql-connector-j'
//    TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
